<?php

namespace App\Controller\Admin;

use App\Entity\Lesson;
use App\Entity\Module;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\CollectionField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextareaField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType;
use Symfony\Component\DomCrawler\Field\FileFormField;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\Security\Core\Security;
use Symfony\Component\HttpFoundation\File\File;

class LessonCrudController extends AbstractCrudController
{
    private $security;

    public function __construct(Security $security)
    {
        $this->security = $security;
    }

    public static function getEntityFqcn(): string
    {
        return Lesson::class;
    }


    public function configureFields(string $pageName): iterable
    {
        return [
            TextField::new('title', 'Titre'),
            TextField::new('goal', 'Objectif'),
            TextEditorField::new('content', 'Content'),
            // CollectionField::new('files')
            // ->setEntryType(FileType::class)
            // ->setFormTypeOptions([
            //     'by_reference' => false,
            //     'allow_add' => true,
            //     'allow_delete' => true,
            //     'data_class' => null,
            // ])
            // ->setCustomOption('basePath', 'uploads/files')
            // ->setCustomOption('uploadDir', 'public/uploads/files'),
            ImageField::new('file', 'Ressources')
            ->setUploadDir('public/uploads/files')
            ->setBasePath('uploads/files')
            ->setUploadedFileNamePattern('[randomhash].[extension]')
            ->setRequired(false)
            ->onlyOnForms(),
            AssociationField::new('id_module', 'Module')
        ];
    }

    public function createEntity(string $entityFqcn)
    {
        $lesson = new Lesson();

        $user = $this->security->getUser()->getTeacher();

        if ($user) {
            $lesson->setIdTeacher($user);
        }

        return $lesson; // TODO: Change the autogenerated stub
    }

    // public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    // {
    //     if ($entityInstance instanceof Lesson && !empty($entityInstance->getFiles())) {
    //         $files = $entityInstance->getFiles();
    //         $filePaths = $this->handleFileUploads($files);
    //         $entityInstance->setFiles($filePaths);
    //     }

    //     parent::persistEntity($entityManager, $entityInstance);
    // }

    // public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    // {
    //     if ($entityInstance instanceof Lesson && !empty($entityInstance->getFiles())) {
    //         $files = $entityInstance->getFiles();
    //         $filePaths = $this->handleFileUploads($files);
    //         $entityInstance->setFiles($filePaths);
    //     }

    //     parent::updateEntity($entityManager, $entityInstance);
    // }

    // private function handleFileUploads(array $files): array
    // {
    //     $filePaths = [];
    //     foreach ($files as $file) {
    //         if ($file instanceof UploadedFile) {
    //             $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
    //             $file->move($this->getParameter('files_directory'), $fileName);
    //             $filePaths[] = $fileName;
    //         } else {
    //             dump($file);
    //         }
    //     }
    //     return $filePaths;
    // }

    // private function generateUniqueFileName()
    // {
    //     return md5(uniqid());
    // }

}
